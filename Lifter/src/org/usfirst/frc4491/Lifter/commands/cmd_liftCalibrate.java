// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4491.Lifter.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4491.Lifter.Robot;

/**
 *
 */
public class  cmd_liftCalibrate extends Command {
	boolean m_bWasAtFloor = false;
	double m_nPulseToCalibrate = 0;
	
    public cmd_liftCalibrate(int nbPulseToCalibrate) {
    	m_nPulseToCalibrate = nbPulseToCalibrate;
        requires(Robot.lift);
    }

    public cmd_liftCalibrate() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.lift);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	System.out.println("liftCalibrate::Init");
    	Robot.lift.disableLift();
    	m_bWasAtFloor = Robot.lift.isLiftAtFloor();
    	if (!m_bWasAtFloor)
    	{
    		System.out.println("liftCalibrate::Init - GotoFloor");
    		Robot.lift.gotoFloor();
    	}
    	else
    	{
    		System.out.println("liftCalibrate::Init - At floor already");
    		Robot.lift.resetLift();
    		Robot.lift.gotoCeil();
    	}
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if (!m_bWasAtFloor)
    	{
    		System.out.println("liftCalibrate::Exec - Going to floor");
    		
    		if (Robot.lift.isLiftAtFloor())
    		{
    			System.out.println("liftCalibrate::Exec - at floor");
    			Robot.lift.stopLift();
    			Robot.lift.resetLift();
    			Robot.lift.gotoCeil();
    			m_bWasAtFloor = true;
    		}
    	}
    	else if (Robot.lift.getEncoderCount() > m_nPulseToCalibrate)
    	{
    		System.out.println("liftCalibrate::Exec - at ceil");
    		Robot.lift.stopLift();
    		System.out.println("liftCalibrate::Exex - Current count=" + Robot.lift.getEncoderCount());
    	}
    	else
    	{
    		System.out.println("liftCalibrate::Exec - Going to ceil, current encoder count=" + Robot.lift.getEncoderCount());
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.lift.stopLift();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.lift.stopLift();
    }
}
